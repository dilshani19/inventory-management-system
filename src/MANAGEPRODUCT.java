
import Duo.connectionprovider;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author oshad
 */
public class MANAGEPRODUCT extends javax.swing.JFrame {

    private int PRODUCTPK = 0;
    private int TOTALQUANTITY = 0;
    /**
     * Creates new form MANAGEPRODUCT
     */
    public MANAGEPRODUCT() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    private void getAllCATEGORY(){
        try{
        Connection con = connectionprovider.getCon();
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery("SELECT * from category");
        COM1.removeAllItems();
        while(rs.next()){
            COM1.addItem(rs.getString("CATEGORY_ID_pk")+"-"+rs.getString("name"));
            //1.test
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }

    
    private boolean validateFields(String formType){
        if(formType.equals("edit") && !TXTS.getText().equals("") &&!TXTP.getText().equals(""))
        {
            return false;
        }
        else if(formType.equals("new") && !TXTS.getText().equals("") &&!TXTP.getText().equals("") &&!TXTQ.getText().equals(""))
        {
            return false;
        }
        else 
         return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABLEP = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        LBLQ = new javax.swing.JLabel();
        TXTS = new javax.swing.JTextField();
        TXTQ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TXTP = new javax.swing.JTextField();
        BTNS = new javax.swing.JButton();
        BTNU = new javax.swing.JButton();
        BTNR = new javax.swing.JButton();
        BTNC = new javax.swing.JButton();
        COM1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Impact", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANAGE PRODUCT");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        TABLEP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "SIZE", "QUANTITY", "PRICE", "CATEGORY_ID", "CATEGORY_NAME"
            }
        ));
        TABLEP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABLEPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TABLEP);
        if (TABLEP.getColumnModel().getColumnCount() > 0) {
            TABLEP.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 570, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SIZE");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, -1, -1));

        LBLQ.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LBLQ.setForeground(new java.awt.Color(255, 255, 255));
        LBLQ.setText("QUANTITY");
        getContentPane().add(LBLQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, -1, -1));

        TXTS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(TXTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 600, 210, -1));

        TXTQ.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TXTQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTQActionPerformed(evt);
            }
        });
        getContentPane().add(TXTQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 660, 210, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PRICE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, -1, -1));

        TXTP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(TXTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 600, 210, -1));

        BTNS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BTNS.setText("Save");
        BTNS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSActionPerformed(evt);
            }
        });
        getContentPane().add(BTNS, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 80, -1));

        BTNU.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BTNU.setText("Update");
        BTNU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNUActionPerformed(evt);
            }
        });
        getContentPane().add(BTNU, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, -1, -1));

        BTNR.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BTNR.setText("Reset");
        BTNR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNRActionPerformed(evt);
            }
        });
        getContentPane().add(BTNR, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 330, 80, -1));

        BTNC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BTNC.setText("Close");
        BTNC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNCActionPerformed(evt);
            }
        });
        getContentPane().add(BTNC, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 80, -1));

        COM1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        COM1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(COM1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 650, 270, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Untitled-3.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 0, 710, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        getAllCATEGORY();
        DefaultTableModel model=(DefaultTableModel) TABLEP.getModel();
        try{
        Connection con= connectionprovider.getCon();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM PRODUCT INNER JOIN CATEGORY ON PRODUCT.CATEGORY_ID_fk=CATEGORY.CATEGORY_ID_pk");        
        while(rs.next()){
            model.addRow(new Object[]{rs.getString("PRODUCT_ID_pk"),rs.getString("SIZE"),rs.getString("QUANTITY"),rs.getString("PRICE"),rs.getString("CATEGORY_ID_fk"),rs.getString(2)});
        }
        }
        catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        BTNU.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void TXTQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTQActionPerformed

    private void BTNCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNCActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_BTNCActionPerformed

    private void BTNRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNRActionPerformed
        // TODO add your handling code here:
        setVisible(false);
                new MANAGEPRODUCT().setVisible(true);
    }//GEN-LAST:event_BTNRActionPerformed

    private void BTNSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSActionPerformed
        // TODO add your handling code here:
        String SIZE=TXTS.getText();
        String QUANTITY=TXTQ.getText();
        String PRICE=TXTP.getText();
        String CATEGORY_ID=(String) COM1.getSelectedItem();
        
        String CATEGORY_ID_fk[]=CATEGORY_ID.split("-",0);
        if(validateFields("new"))
        {
            JOptionPane.showMessageDialog(null,"All Fields Are Required");
        }
        else{
            try{
                Connection con=connectionprovider.getCon();
                PreparedStatement ps = con.prepareStatement("INSERT INTO PRODUCT(SIZE,QUANTITY,PRICE,CATEGORY_ID_fk) VALUES(?,?,?,?)");
            ps.setString(1, SIZE);
            ps.setString(2, QUANTITY);
            ps.setString(3, PRICE);
            ps.setString(4, CATEGORY_ID_fk[0]);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Product Added Successfully");
            setVisible(false);
            new MANAGEPRODUCT().setVisible(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_BTNSActionPerformed

    private void TABLEPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABLEPMouseClicked
        // TODO add your handling code here:
        int index = TABLEP.getSelectedRow();
        TableModel model = TABLEP.getModel();
        String ID = model.getValueAt(index, 0).toString();
         PRODUCTPK = Integer.parseInt(ID);
        
        
        
        String SIZE =model.getValueAt(index,1).toString();
        TXTS.setText(SIZE);
         String PRICE=model.getValueAt(index,2).toString();
         TXTP.setText(PRICE);
        
        
        String QUANTITY=model.getValueAt(index,3).toString();
        TOTALQUANTITY=0;
        LBLQ.setText("Add");
        TOTALQUANTITY=Integer.parseInt(QUANTITY);
        
         
         COM1.removeAllItems();
         String CATEGORY_ID_pk=model.getValueAt(index,4).toString();
          String NAME=model.getValueAt(index,5).toString();
          COM1.addItem(CATEGORY_ID_pk + "-" + NAME);
        
      try{
        Connection con = connectionprovider.getCon();
      Statement st=con.createStatement();
     ResultSet rs=st.executeQuery("SELECT * from category");
     while(rs.next()){
            if(Integer.parseInt(CATEGORY_ID_pk) !=rs.getInt(1))
            COM1.addItem(rs.getString("CATEGORY_ID_pk")+"-"+rs.getString("NAME"));
            //1.test
        }
       }
       catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
      }
        
        BTNS.setEnabled(false);
        BTNU.setEnabled(true);
        
    }//GEN-LAST:event_TABLEPMouseClicked

    private void BTNUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNUActionPerformed
        // TODO add your handling code here:
                String SIZE=TXTS.getText();
        String QUANTITY=TXTQ.getText();
        String PRICE=TXTP.getText();
        String CATEGORY_ID=(String) COM1.getSelectedItem();
        
        String CATEGORY_ID_fk[]=CATEGORY_ID.split("-",0);
        if(validateFields("new"))
        {
            JOptionPane.showMessageDialog(null,"All Fields Are Required");
        }
        else{
            try{
                if(!QUANTITY.equals("")){
                    TOTALQUANTITY = TOTALQUANTITY + Integer.parseInt(QUANTITY);
                }
                Connection con=connectionprovider.getCon();
                PreparedStatement ps = con.prepareStatement("UPDATE PRODUCT SET SIZE=?,QUANTITY=?, PRICE=? ,CATEGORY_ID_fk=? WHERE PRODUCT_ID_pk=?" );
            ps.setString(1, SIZE);
            ps.setInt(2, TOTALQUANTITY);
            ps.setString(3, PRICE);
            ps.setString(4, CATEGORY_ID_fk[0]);
            ps.setInt(5,PRODUCTPK);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Product Updated Successfully");
            setVisible(false);
            new MANAGEPRODUCT().setVisible(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_BTNUActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MANAGEPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MANAGEPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MANAGEPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MANAGEPRODUCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MANAGEPRODUCT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNC;
    private javax.swing.JButton BTNR;
    private javax.swing.JButton BTNS;
    private javax.swing.JButton BTNU;
    private javax.swing.JComboBox<String> COM1;
    private javax.swing.JLabel LBLQ;
    private javax.swing.JTable TABLEP;
    private javax.swing.JTextField TXTP;
    private javax.swing.JTextField TXTQ;
    private javax.swing.JTextField TXTS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
